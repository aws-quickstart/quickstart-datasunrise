{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "DataSunrise Cluster for Amazon Web Services (+ VPC + Linux Bastion + Redshift)",
    "Metadata" : {
        "AWS::CloudFormation::Interface" : {
            "ParameterGroups" : [
                {
                    "Label" : { "default" : "Amazon VPC: basic configuration" },
                    "Parameters" : [
                        "VPCAvailabilityZones",
                        "VPCCIDR",
                        "VPCPrivateSubnet1CIDR",
                        "VPCPrivateSubnet2CIDR",
                        "VPCPublicSubnet1CIDR",
                        "VPCPublicSubnet2CIDR",
                        "VPCTenancy",
                        "VPCRemoteAccessCIDR"
                    ]
                },
                {
                    "Label" : { "default" : "Linux bastion: basic configuration" },
                    "Parameters" : [
                        "LinuxBastionKeyPair"
                    ]
                },
                {
                    "Label" : { "default" : "Amazon Redshift: basic configuration" },
                    "Parameters" : [
                        "RedshiftNodeType",
                        "RedshiftNodesNumber",
                        "RedshiftDBName",
                        "RedshiftMasterUserName",
                        "RedshiftMasterUserPassword"
                    ]
                },
                {
                    "Label" : { "default" : "Amazon Redshift: tag identifiers" },
                    "Parameters" : [
                        "RedshiftTagEnvironment",
                        "RedshiftTagName",
                        "RedshiftTagProjectCostCenter",
                        "RedshiftTagConfidentiality",
                        "RedshiftTagCompliance"
                    ]
                },
                {
                    "Label" : { "default" : "Amazon Redshift: advanced configuration" },
                    "Parameters" : [
                        "RedshiftClusterPort",                        
                        "RedshiftEnableLoggingToS3",
                        "RedshiftMaximumConcurrentCluster",
                        "RedshiftEncryptionAtRest",
                        "RedshiftKMSKey",
                        "RedshiftMaintenanceWindow",
                        "RedshiftS3BucketForRedshiftIAMRole",
                        "RedshiftGlueCatalogDB"
                    ]
                },
                {
                    "Label" : { "default" : "DataSunrise: basic cluster configuration" },
                    "Parameters" : [
                        "DSClusterMinimumSize",
                        "DSClusterMaximumSize",
                        "DSClusterMemberInstanceType",
                        "DSClusterMemberKeyPair",
                        "DSClusterLicense"
                    ]
                },
                {
                    "Label" : { "default" : "DataSunrise: dictionary configuration" },
                    "Parameters" : [
                        "DSDictionaryDBName",
                        "DSDictionaryDBUserName",
                        "DSDictionaryDBStorageSize",
                        "DSDictionaryDBClass"
                    ]
                },
                {
                    "Label" : { "default" : "DataSunrise: audit configuration" },
                    "Parameters" : [
                        "DSAuditDBName",
                        "DSAuditDBUserName",
                        "DSAuditDBStorageSize",
                        "DSAuditDBClass"
                    ]
                },              
                {
                    "Label" : { "default" : "DataSunrise: advanced cluster configuration" },
                    "Parameters" : [
                        "DSAutoScalingPolicyAverageCPUBusy",
                        "DSLoadBalancerHealthCheckTarget"
                    ]
                },
                {
                    "Label" : { "default" : "DataSunrise: users configuration" },
                    "Parameters" : [
                        "DSAdminEmail",
                        "DSAdminPassword",
                        "DSUserName",
                        "DSUserEmail",
                        "DSUserPassword"
                    ]
                },
                {
                    "Label" : { "default" : "AWS Quick Start: configuration" },
                    "Parameters" : [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels" : {
                "DSAdminEmail" : {
                    "default" : "Administrator email"
                },                
                "DSAdminPassword" : {
                    "default" : "Administrator password"
                },
                "DSAuditDBClass" : {
                    "default" : "Audit database instance type"
                },
                "DSAuditDBName" : {
                    "default" : "Audit database name"
                },
                "DSAuditDBUserName" : {
                    "default" : "Audit database username"
                },
                "DSAuditDBStorageSize" : {
                    "default" : "Audit database size"
                },
                "DSAutoScalingPolicyAverageCPUBusy" : {
                    "default" : "Average CPU utilization"
                },                
                "DSDictionaryDBClass" : {
                    "default" : "Dictionary database instance type"
                },
                "DSDictionaryDBName" : {
                    "default" : "Dictionary database name"
                },
                "DSDictionaryDBUserName" : {
                    "default" : "Dictionary database username"
                },
                "DSDictionaryDBStorageSize" : {
                    "default" : "Dictionary database size"
                },
                "DSClusterLicense" : {
                    "default" : "DataSunrise license"
                },                
                "DSClusterMaximumSize" : {
                    "default" : "Cluster member maximum size"
                },
                "DSClusterMemberInstanceType" : {
                    "default" : "Cluster member instance type"
                },
                "DSClusterMemberKeyPair" : {
                    "default" : "Cluster member key pair"
                },
                "DSClusterMinimumSize" : {
                    "default" : "Cluster member minimum size"
                },
                "DSLoadBalancerHealthCheckTarget" : {              
                    "default" : "Health check target"
                },
                "DSUserEmail" : {
                    "default" : "User email"
                },
                "DSUserName" : {
                    "default" : "User name"
                },
                "DSUserPassword" : {
                    "default" : "User password"
                },                
                "LinuxBastionKeyPair" : {
                    "default" : "Bastion key pair"
                },
                "QSS3BucketName" : {
                    "default" : "Quick Start S3 bucket name"
                },
                "QSS3KeyPrefix" : {
                    "default" : "Quick Start S3 key prefix"
                },
                "RedshiftClusterPort" : {
                    "default" : "Redshift cluster port"
                },
                "RedshiftDBName" : {
                    "default" : "Redshift database name"
                },
                "RedshiftEnableLoggingToS3" : {
                    "default" : "Enable Redshift logging to S3"
                },
                "RedshiftEncryptionAtRest" : {
                    "default" : "Encryption at rest"
                },
                "RedshiftGlueCatalogDB" : {
                    "default" : "Glue catalog database name"
                },                 
                "RedshiftKMSKey" : {
                    "default" : "KMS key ID"
                },                 
                "RedshiftMaintenanceWindow" : {
                    "default" : "Maintenance window"
                },
                "RedshiftMasterUserName" : {
                    "default" : "Redshift master user name"
                },
                "RedshiftMasterUserPassword" : {
                    "default" : "Redshift master user password"
                },
                "RedshiftMaximumConcurrentCluster" : {
                    "default" : "Maximum number of concurrent clusters"
                },
                "RedshiftNodeType" : {
                    "default" : "Node type for Redshift cluster"
                },                
                "RedshiftNodesNumber" : {
                    "default" : "Number of nodes in Redshift cluster"
                },
                "RedshiftS3BucketForRedshiftIAMRole" : {
                    "default" : "Amazon S3 bucket for Redshift IAM role"
                },             
                "RedshiftTagEnvironment" : {
                    "default" : "Environment"
                },
                "RedshiftTagCompliance" : {
                    "default" : "Compliance classifier"
                },                  
                "RedshiftTagConfidentiality" : {
                    "default" : "Confidentiality classifier"
                },                
                "RedshiftTagName" : {
                    "default" : "Unique friendly name"
                },
                "RedshiftTagProjectCostCenter" : {
                    "default" : "Project cost center"
                },
                "VPCAvailabilityZones" : {
                    "default" : "Availability Zones"
                },
                "VPCCIDR" : {
                    "default" : "VPC CIDR"
                },
                "VPCPrivateSubnet1CIDR" : {
                    "default" : "Private subnet 1A CIDR"
                },
                "VPCPrivateSubnet2CIDR" : {
                    "default" : "Private subnet 2A CIDR"
                },
                "VPCPublicSubnet1CIDR" : {
                    "default" : "Public subnet 1 CIDR"
                },
                "VPCPublicSubnet2CIDR" : {
                    "default" : "Public subnet 2 CIDR"
                },
                "VPCRemoteAccessCIDR" : {
                    "default" : "Allowed external access CIDR"
                },                
                "VPCTenancy" : {
                    "default" : "VPC tenancy"
                }
            }
        }
    },
    "Parameters" : {
        "DSAdminEmail" : {
            "AllowedPattern" : "^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$",
            "ConstraintDescription" : "Must be a valid email address",
            "Default" : "admin-email-here@example.domain",
            "Description" : "Administrator email address",
            "MinLength" : "6",
            "Type" : "String"
        },         
        "DSAdminPassword" : {
            "AllowedPattern" : "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?!._*[@/\\\\\\\"']).*$",
            "ConstraintDescription" : "Enter alphanumeric password for the master user. The password must contain 8 to 41 printable ASCII characters, excluding: /, \", \\'', \\", 
            "Description" : "Administrator password. Must contain 8 to 41 printable ASCII characters (excluding: /, \", \\'', \\)",
            "MaxLength" : "41",
            "MinLength" : "8",
            "NoEcho" : true,
            "Type" : "String"
        },
        "DSAuditDBClass" : {
            "AllowedValues" : [
                "db.t2.micro", "db.t2.small", "db.t2.medium", "db.t2.large", "db.t2.xlarge", "db.t2.2xlarge", "db.m2.xlarge",
                "db.m2.2xlarge", "db.m2.4xlarge", "db.m3.medium", "db.m3.large", "db.m3.xlarge", "db.m3.2xlarge", "db.m4.large",
                "db.m4.xlarge", "db.m4.2xlarge", "db.m4.4xlarge", "db.m4.10xlarge", "db.m4.16xlarge", "db.r3.large", "db.r3.xlarge",
                "db.r3.2xlarge", "db.r3.4xlarge", "db.r3.8xlarge"
            ],
            "Description" : "RDS instance type for audit database",
            "Default" : "db.t2.micro",
            "Type" : "String"
        },
        "DSAuditDBName" : {
            "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription" : "Must begin with a letter and contain only alphanumeric characters",
            "Description" : "DataSunrise Audit is used to store audit logs. Must begin with a letter and contain only alphanumeric characters",
            "Default" : "dsaudit",
            "MaxLength" : "63",
            "MinLength" : "1",
            "Type" : "String"
        },
        "DSAuditDBStorageSize" : {
            "ConstraintDescription" : "Must be between 100 and 1024 GB",
            "Default" : "200",
            "Description" : "Audit database size (GB)",
            "MaxValue" : "1024",
            "MinValue" : "100",
            "Type" : "Number"
        },       
        "DSAuditDBUserName" : {
            "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription" : "Must begin with a letter and contain only alphanumeric characters",
            "Description" : "Database username with administrador privileges. Must begin with a letter and contain only alphanumeric characters",
            "Default" : "dsauser",
            "MaxLength" : "16",
            "MinLength" : "1",
            "Type" : "String"
        },
        "DSAutoScalingPolicyAverageCPUBusy" : {
            "AllowedValues" : [ "50" , "60" , "70" , "80" , "90" ],
            "Default" : "50",
            "Description" : "Average CPU utilization (%)",
            "Type" : "String"
        },        
        "DSDictionaryDBClass" : {
            "AllowedValues" : [
                "db.t2.micro", "db.t2.small", "db.t2.medium", "db.t2.large", "db.t2.xlarge", "db.t2.2xlarge", "db.m2.xlarge",
                "db.m2.2xlarge", "db.m2.4xlarge", "db.m3.medium", "db.m3.large", "db.m3.xlarge", "db.m3.2xlarge", "db.m4.large",
                "db.m4.xlarge", "db.m4.2xlarge", "db.m4.4xlarge", "db.m4.10xlarge", "db.m4.16xlarge", "db.r3.large", "db.r3.xlarge",
                "db.r3.2xlarge", "db.r3.4xlarge", "db.r3.8xlarge"
            ],
            "Description" : "RDS instance type for dictionary database",
            "Default" : "db.t2.micro",
            "Type" : "String"
        },
        "DSDictionaryDBName" : {
            "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription" : "Must begin with a letter and contain only alphanumeric characters",
            "Description" : "DataSunrise Dictionary is used to store configurations. Must begin with a letter and contain only alphanumeric characters",
            "Default" : "dsdictionary",
            "MaxLength" : "63",
            "MinLength" : "1",
            "Type" : "String"
        },        
        "DSDictionaryDBStorageSize" : {
            "ConstraintDescription" : "Must be between 20 and 60 GB",
            "Default" : "20",
            "Description" : "Dictionary database size (GB)",
            "MaxValue" : "60",
            "MinValue" : "20",
            "Type" : "Number"
        },
        "DSDictionaryDBUserName" : {
            "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription" : "Must begin with a letter and contain only alphanumeric characters",
            "Description" : "Database username with administrador privileges. Must begin with a letter and contain only alphanumeric characters",
            "Default" : "dsduser",
            "MaxLength" : "16",
            "MinLength" : "1",
            "Type" : "String"
        },
        "DSClusterLicense" : {
            "Default" : "",
            "Description" : "License string",
            "Type" : "String"
        },
        "DSClusterMaximumSize" : {
            "AllowedValues" : [ "1" , "2" , "3" , "4" , "5" , "6" , "7", "8" , "9" , "10" ],
            "Default" : "3",
            "Description" : "Maximum size of DataSunrise cluster. It must be equal or greater than its minimum size",
            "Type" : "String"
        },
        "DSClusterMemberInstanceType" : {
            "AllowedValues" : [
                "a1.medium" , "a1.large" , "a1.xlarge" , "a1.2xlarge" , "a1.4xlarge" , "m4.large" , "m4.xlarge" , "m4.2xlarge" , "m4.4xlarge" , "m4.10xlarge" ,
                "m4.16xlarge" , "m5.large" , "m5.xlarge" , "m5.2xlarge" , "m5.4xlarge" , "m5.8xlarge" , "m5.12xlarge" , "m5.16xlarge" , "m5.24xlarge" , "m5.metal" ,
                "m5a.large" , "m5a.xlarge" , "m5a.2xlarge" , "m5a.4xlarge" , "m5a.8xlarge" , "m5a.12xlarge" , "m5a.16xlarge" , "m5a.24xlarge" , "m5ad.large" , "m5ad.xlarge" ,
                "m5ad.2xlarge" , "m5ad.4xlarge" , "m5ad.12xlarge" , "m5ad.24xlarge" , "m5d.large" , "m5d.xlarge" , "m5d.2xlarge" , "m5d.4xlarge" , "m5d.8xlarge" , "m5d.12xlarge" ,
                "m5d.16xlarge" , "m5d.24xlarge" , "m5d.metal" , "t2.nano" , "t2.micro" , "t2.small" , "t2.medium" , "t2.large" , "t2.xlarge" , "t2.2xlarge" ,
                "t3.nano" , "t3.micro" , "t3.small" , "t3.medium" , "t3.large" , "t3.xlarge" , "t3.2xlarge" , "t3a.nano" , "t3a.micro" , "t3a.small" ,
                "t3a.medium" , "t3a.large" , "t3a.xlarge" , "t3a.2xlarge" ,
                "c4.large" , "c4.xlarge" , "c4.2xlarge" , "c4.4xlarge" , "c4.8xlarge" , "c5.large" , "c5.xlarge" , "c5.2xlarge" , "c5.4xlarge" , "c5.9xlarge" ,
                "c5.12xlarge" , "c5.18xlarge" , "c5.24xlarge" , "c5.metal" , "c5d.large" , "c5d.xlarge" , "c5d.2xlarge" , "c5d.4xlarge" , "c5d.9xlarge" , "c5d.18xlarge" ,
                "c5n.large" , "c5n.xlarge" , "c5n.2xlarge" , "c5n.4xlarge" , "c5n.9xlarge" , "c5n.18xlarge" ,
                "r4.large" , "r4.xlarge" , "r4.2xlarge" , "r4.4xlarge" , "r4.8xlarge" , "r4.16xlarge" , "r5.large" , "r5.xlarge" , "r5.2xlarge" , "r5.4xlarge" ,
                "r5.8xlarge" , "r5.12xlarge" , "r5.16xlarge" , "r5.24xlarge" , "r5.metal" , "r5a.large" , "r5a.xlarge" , "r5a.2xlarge" , "r5a.4xlarge" , "r5a.8xlarge" ,
                "r5a.12xlarge" , "r5a.16xlarge" , "r5a.24xlarge" , "r5ad.large" , "r5ad.xlarge" , "r5ad.2xlarge" , "r5ad.4xlarge" , "r5ad.12xlarge" , "r5ad.24xlarge" , "r5d.large" ,
                "r5d.xlarge" , "r5d.2xlarge" , "r5d.4xlarge" , "r5d.8xlarge" , "r5d.12xlarge" , "r5d.16xlarge" , "r5d.24xlarge" , "r5d.metal" , "u-6tb1.metal" , "u-9tb1.metal" ,
                "u-12tb1.metal" , "x1.16xlarge" , "x1.32xlarge" , "x1e.xlarge" , "x1e.2xlarge" , "x1e.4xlarge" , "x1e.8xlarge" , "x1e.16xlarge" , "x1e.32xlarge" , "z1d.large" ,
                "z1d.xlarge" , "z1d.2xlarge" , "z1d.3xlarge" , "z1d.6xlarge" , "z1d.12xlarge" , "z1d.metal" , 
                "d2.xlarge" , "d2.2xlarge" , "d2.4xlarge" , "d2.8xlarge" , "h1.2xlarge" , "h1.4xlarge" , "h1.8xlarge" , "h1.16xlarge" , "i3.large" , "i3.xlarge" ,
                "i3.2xlarge" , "i3.4xlarge" , "i3.8xlarge" , "i3.16xlarge" , "i3.metal" , "i3en.large" , "i3en.xlarge" , "i3en.2xlarge" , "i3en.3xlarge" , "i3en.6xlarge" ,
                "i3en.12xlarge" , "i3en.24xlarge" ,
                "f1.2xlarge" , "f1.4xlarge" , "f1.16xlarge" , "g3s.xlarge" , "g3.4xlarge" , "g3.8xlarge" , "g3.16xlarge" , "p2.xlarge" , "p2.8xlarge" , "p2.16xlarge" ,
                "p3.2xlarge" , "p3.8xlarge" , "p3.16xlarge" , "p3dn.24xlarge"
            ],
            "Description" : "EC2 instance type to be used by a cluster member. By default, t2.micro is free tier eligible",
            "Default" : "t2.micro",
            "Type" : "String"
        },
        "DSClusterMemberKeyPair" : {
            "ConstraintDescription" : "EC2 key pair must exist",
            "Description" : "EC2 key pair to be attached",
            "Type" : "AWS::EC2::KeyPair::KeyName"
        },
        "DSClusterMinimumSize" : {
            "AllowedValues" : [ "1" , "2" , "3" , "4" , "5" , "6" , "7", "8" , "9" , "10" ],
            "Default" : "1",
            "Description" : "Minimum size of DataSunrise cluster",
            "Type" : "String"
        },
        "DSLoadBalancerHealthCheckTarget" : {
            "Type" : "String",
            "Default" : "HTTPS:11000/healthcheck/general",
            "AllowedValues" : [ "HTTPS:11000/healthcheck/all_instances" , "HTTPS:11000/healthcheck/general" ],
            "Description" : "Specifies which healthcheck type use"
        },
        "DSUserEmail" : {
            "AllowedPattern" : "^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$",
            "ConstraintDescription" : "Must be a valid email address",
            "Default" : "user-email-here@example.domain",
            "Description" : "User email address",
            "MinLength" : "6",
            "Type" : "String"
        },        
        "DSUserName" : {
            "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
            "Default" : "mydatasunriseusernamehere",
            "Description" : "Regular DataSurise user. Must begin with a letter and contain only alphanumeric characters",            
            "MinLength" : "6",
            "Type" : "String"
        },
        "DSUserPassword" : {
            "AllowedPattern" : "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?!._*[@/\\\\\\\"']).*$",
            "ConstraintDescription" : "Enter alphanumeric password for the master user. The password must contain 8 to 41 printable ASCII characters, excluding: /, \", \\'', \\", 
            "Description" : "User password. Must contain 8 to 41 printable ASCII characters (excluding: /, \", \\'', \\)",
            "MaxLength" : "41",
            "MinLength" : "6",
            "NoEcho" : true,
            "Type" : "String"
        },                               
        "LinuxBastionKeyPair" : {
            "ConstraintDescription" : "EC2 key pair must exist",
            "Description" : "EC2 key pair to be attached",
            "Type" : "AWS::EC2::KeyPair::KeyName"
        },
        "QSS3BucketName" : {
            "AllowedPattern" : "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription" : "AWS Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default" : "aws-quickstart",
            "Description" : "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)",
            "Type" : "String"
        },
        "QSS3KeyPrefix" : {
            "AllowedPattern" : "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription" : "AWS Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default" : "quickstart-datasunrise/",
            "Description" : "S3 key prefix for the AWS Quick Start assets. AWS Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended",
            "Type" : "String"
        },
        "RedshiftClusterPort" : {        
            "Default" : 8200 ,
            "Description" : "Port number to be used by the cluster for incoming connections",
            "Type" : "Number"
        },
        "RedshiftDBName" : {
            "AllowedPattern" : "([a-z]|[0-9])+",
            "Default" : "rsdsqsdev01",
            "Description" : "Name of the first database to be created when the cluster is deployed",
            "Type" : "String"
        },
        "RedshiftEnableLoggingToS3" : {
            "AllowedValues" : [ "false", "true" ],
            "Default" : "false",
            "Description" : "Enable (true) or disable (false) logging to an S3 bucket",
            "Type" : "String"
        },
        "RedshiftEncryptionAtRest" : {
            "AllowedValues" : [ "false", "true" ],
            "Default" : "false",
            "Description" : "Enable (true) or disable (false) encryption at rest of the Redshift database",
            "Type" : "String"
        },
        "RedshiftGlueCatalogDB" : {
            "AllowedPattern" : "([ \\t\\n\\x0B\\f\\r])*|([a-z])([\\-]|[a-z]|[\\-]|[0-9])*",
            "ConstraintDescription" : "Must start with a-z and contain only a-z or 0-9 or hyphen (-)",
            "Default" : "",
            "Description" : "(Optional) The name of your glue data catalog database",
            "Type" : "String"
        },                 
        "RedshiftKMSKey" : {
            "Default" : "",
            "Description" : "Existing KMS key ID for encrypting Redshift database at-rest",
            "Type" : "String"
        },                 
        "RedshiftMaintenanceWindow" : {
            "Default" : "sat:05:00-sat:05:30",
            "Description" : "Maintenance window for the Redshift cluster",
            "Type" : "String"
        },
        "RedshiftMasterUserName" : {
            "AllowedPattern" : "([a-z])([a-z]|[0-9])*",
            "ConstraintDescription" : "Must start with a-z and contain only a-z or 0-9",
            "Default" : "rsadmin",
            "Description" : "User name associated to the master user account for the cluster to be deployed",
            "Type" : "String"
        },
        "RedshiftMasterUserPassword" : {
            "AllowedPattern" : "(?=^.{6,255}$)((?=.*\\\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "ConstraintDescription" : "Enter alphanumeric password for the master user. The password must contain 8 to 64 printable ASCII characters,Must have at least 8 characters and no more than 64 characters, and must include 1 uppercase letter, 1 lowercase letter, 1 number, and 1 symbol (excluding / @ \" ')", 
            "Description" : "User password associated to the master user account for the cluster to be deployed. Must have at least 8 characters and no more than 64 characters, and must include 1 uppercase letter, 1 lowercase letter, 1 number, and 1 symbol (excluding / @ \" ')",
            "MinLength" : "8",
            "MaxLength" : "64",
            "NoEcho" : true,
            "Type" : "String"
        },
        "RedshiftMaximumConcurrentCluster" : {
            "Default" : "1",
            "Description" : "Maximum number of concurrency scaling Redshift clusters",
            "Type" : "String"
        },
        "RedshiftNodeType" : {
            "Default" : "dc2.large",
            "Description" : "Type of node to be provisioned",
            "AllowedValues" : [ "dc2.large" , "dc2.8xlarge" , "ds2.xlarge" , "ds2.8xlarge" ],
            "Type" : "String"
        },
        "RedshiftNodesNumber" : {
            "Default" : "2",
            "Description" : "Number of nodes in the cluster. For multi-node clusters, this parameter must be greater than 1",
            "Type" : "Number"
        },
        "RedshiftS3BucketForRedshiftIAMRole" : {
            "Default" : "",
            "Description" : "(Optional) Existing Amazon S3 bucket. An IAM role will be created and associated to the Redshift cluster with GET and LIST access to this bucket",
            "Type" : "String"
        },  
        "RedshiftTagEnvironment" : {
            "AllowedValues" : [ "dev" , "test" , "pre-prod" , "prod" , "none" ],
            "Default" : "none",
            "Description" : "Environment tag used to designate the environment stage of the cluster",
            "Type" : "String"
        },
        "RedshiftTagCompliance" : {
            "AllowedValues" : [  "sox" , "fips" ,  "hipaa",  "other" , "" ],    
            "Default" : "",
            "Description" : "Compliance level for the cluster",
            "Type" : "String"
        },                
        "RedshiftTagConfidentiality" : {
            "AllowedValues" : [ "confidencial" , "pii/phi" , "private" , "public" , "" ],
            "Description" : "Confidentiality classification of the data that is associated with the cluster",
            "Default" : "",
            "Type" : "String"            
        },               
        "RedshiftTagName" : {
            "Default" : "rsqs-DataSunrise",
            "Description" : "Unique friendly name required by your company's tagging strategy document, and which will be added to the environment tag",
            "Type" : "String"
        },
        "RedshiftTagProjectCostCenter" : {
            "AllowedPattern" : "^[a-zA-Z0-9]+$",
            "ConstraintDescription" : "Provide a valid cost center",
            "Default" : "12345",
            "Description" : "Cost center associated to the cluster",
            "Type" : "String"
        },
        "VPCAvailabilityZones" : {
            "Description" : "Two availability zones to be used for the subnets in the VPC. The logical order will be preserved",
            "Type" : "List<AWS::EC2::AvailabilityZone::Name>"
        },        
        "VPCCIDR" : {
            "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription" : "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default" : "10.0.0.0/16",
            "Description" : "CIDR Block for the VPC",
            "Type" : "String"
       },        
        "VPCPrivateSubnet1CIDR" : {
            "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription" : "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default" : "10.0.0.0/19",
            "Description" : "CIDR block for private subnet 1 located in availability zone 1",
            "Type" : "String"
        },
        "VPCPrivateSubnet2CIDR" : {
            "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription" : "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default" : "10.0.32.0/19",
            "Description" : "CIDR block for private subnet 1 located in availability zone 2",
            "Type" : "String"
        },
        "VPCPublicSubnet1CIDR" : {
            "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription" : "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default" : "10.0.128.0/20",
            "Description" : "CIDR Block for the public DMZ subnet 1 located in availability zone 1",
            "Type" : "String"
        },
        "VPCPublicSubnet2CIDR" : {
            "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription" : "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default" : "10.0.144.0/20",
            "Description" : "CIDR Block for the public DMZ subnet 2 located in availability zone 2",
            "Type" : "String"
        },
        "VPCRemoteAccessCIDR" : {
            "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription" : "CIDR block parameter must be in the form x.x.x.x/x",
            "Description" : "Allowed CIDR block for external access. If you want to allow external access from everywhere use 0.0.0.0/0",
            "Type" : "String"
        },                
        "VPCTenancy" : {
             "AllowedValues" : [ "default" , "dedicated" ],
             "Default" : "default",
             "Description" : "Allowed tenancy of instances launched into the VPC",
             "Type" : "String"
        }
    },
    "Mappings" : {      
        "RegionAMI" : {
            "us-east-1" : { "AMI" : "ami-1853ac65" },
            "us-east-2" : { "AMI" : "ami-25615740" },
            "us-west-1" : { "AMI" : "ami-bf5540df" },
            "us-west-2" : { "AMI" : "ami-d874e0a0" },
            "ca-central-1" : { "AMI" : "ami-5b55d23f" },
            "eu-central-1" : { "AMI" : "ami-ac442ac3" },
            "eu-west-1" : { "AMI" : "ami-3bfab942" },
            "eu-west-2" : { "AMI" : "ami-dff017b8" },
            "eu-west-3" : { "AMI" : "ami-4f55e332" },
            "ap-northeast-1" : { "AMI" : "ami-a77c30c1" },
            "ap-northeast-2" : { "AMI" : "ami-5e1ab730" },
            "ap-southeast-1" : { "AMI" : "ami-e2adf99e" },
            "ap-southeast-2" : { "AMI" : "ami-43874721" },
            "ap-south-1" : { "AMI" : "ami-7c87d913" },
            "sa-east-1" : { "AMI" : "ami-5339733f" }
        }
    },
    "Conditions" : {
        "GovCloudCondition" : {
            "Fn::Equals" : [ { "Ref" : "AWS::Region" } , "us-gov-west-1" ]
        }
    },
    "Resources" : {
        "awsVPC" : {
            "Type" : "AWS::CloudFormation::Stack",
            "Properties" : {
                "TemplateURL" : {
                    "Fn::Sub" : [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template",
                        {
                            "QSS3Region" : {
                                "Fn::If" : [ "GovCloudCondition" , "s3-us-gov-west-1" , "s3" ]
                            }
                        }
                    ]
                },
                "Parameters" : {
                    "AvailabilityZones" : { "Fn::Join" : [ "," , { "Ref" : "VPCAvailabilityZones" } ] },
                    "KeyPairName" : { "Ref" : "DSClusterMemberKeyPair" },
                    "NumberOfAZs" : "2",
                    "PrivateSubnet1ACIDR" : { "Ref" : "VPCPrivateSubnet1CIDR" },
                    "PrivateSubnet2ACIDR" : { "Ref" : "VPCPrivateSubnet2CIDR" },
                    "PublicSubnet1CIDR" : { "Ref" : "VPCPublicSubnet1CIDR" },
                    "PublicSubnet2CIDR" : { "Ref" : "VPCPublicSubnet2CIDR" },
                    "VPCCIDR" : { "Ref" : "VPCCIDR" },
                    "VPCTenancy" : { "Ref" : "VPCTenancy" }
                }
            }
        },
        "dsDataSunriseCluster" : {
            "Type" : "AWS::CloudFormation::Stack",
            "Properties" : {
                "TemplateURL" : {
                    "Fn::Sub" : [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/datasunrise.template",
                        {
                            "QSS3Region" : {
                                "Fn::If" : [ "GovCloudCondition" , "s3-us-gov-west-1" , "s3" ]
                            }
                        }
                    ]
                },
                "Parameters" : {
                    "VPCID" : { "Fn::GetAtt" : [ "awsVPC", "Outputs.VPCID" ] },
                    "VPCPrivateSubnet1ID" : { "Fn::GetAtt" : [ "awsVPC", "Outputs.PrivateSubnet1AID" ] },
                    "VPCPrivateSubnet2ID" : { "Fn::GetAtt" : [ "awsVPC", "Outputs.PrivateSubnet2AID" ] },
                    "VPCPublicSubnet1ID" : { "Fn::GetAtt" : [ "awsVPC", "Outputs.PublicSubnet1ID" ] },
                    "VPCPublicSubnet2ID" : { "Fn::GetAtt" : [ "awsVPC", "Outputs.PublicSubnet2ID" ] },
                    "VPCRemoteAccessCIDR" : { "Ref" : "VPCRemoteAccessCIDR" },
                    "LinuxBastionKeyPair" : { "Ref" : "LinuxBastionKeyPair" },
                    "RedshiftNodeType" : { "Ref" : "RedshiftNodeType" },
                    "RedshiftNodesNumber" : { "Ref" : "RedshiftNodesNumber" },
                    "RedshiftDBName" : { "Ref" : "RedshiftDBName" },
                    "RedshiftMasterUserName" : { "Ref" : "RedshiftMasterUserName" },
                    "RedshiftMasterUserPassword" : { "Ref" : "RedshiftMasterUserPassword" },
                    "RedshiftTagEnvironment" : { "Ref" : "RedshiftTagEnvironment" },
                    "RedshiftTagName" : { "Ref" : "RedshiftTagName" },
                    "RedshiftTagProjectCostCenter" : { "Ref" : "RedshiftTagProjectCostCenter" },
                    "RedshiftTagConfidentiality" : { "Ref" : "RedshiftTagName" },
                    "RedshiftTagCompliance" : { "Ref" : "RedshiftTagCompliance" },
                    "RedshiftClusterPort" : { "Ref" : "RedshiftClusterPort" },
                    "RedshiftEnableLoggingToS3" : { "Ref" : "RedshiftEnableLoggingToS3" },
                    "RedshiftMaximumConcurrentCluster" : { "Ref" : "RedshiftMaximumConcurrentCluster" },
                    "RedshiftEncryptionAtRest" : { "Ref" : "RedshiftEncryptionAtRest" },
                    "RedshiftKMSKey" : { "Ref" : "RedshiftKMSKey" },
                    "RedshiftMaintenanceWindow" : { "Ref" : "RedshiftMaintenanceWindow" },
                    "RedshiftS3BucketForRedshiftIAMRole" : { "Ref" : "RedshiftS3BucketForRedshiftIAMRole" },
                    "RedshiftGlueCatalogDB" : { "Ref" : "RedshiftGlueCatalogDB" },
                    "DSClusterMinimumSize" : { "Ref" : "DSClusterMinimumSize" },
                    "DSClusterMaximumSize" : { "Ref" : "DSClusterMaximumSize" },
                    "DSClusterMemberInstanceType" : { "Ref" : "DSClusterMemberInstanceType" },
                    "DSClusterMemberKeyPair" : { "Ref" : "DSClusterMemberKeyPair" },
                    "DSClusterLicense" : { "Ref" : "DSClusterLicense" },
                    "DSDictionaryDBName" : { "Ref" : "DSDictionaryDBName" },
                    "DSDictionaryDBUserName" : { "Ref" : "DSDictionaryDBUserName" },
                    "DSDictionaryDBStorageSize" : { "Ref" : "DSDictionaryDBStorageSize" },
                    "DSDictionaryDBClass" : { "Ref" : "DSDictionaryDBClass" },
                    "DSAuditDBName" : { "Ref" : "DSAuditDBName" },
                    "DSAuditDBUserName" : { "Ref" : "DSAuditDBUserName" },
                    "DSAuditDBStorageSize" : { "Ref" : "DSAuditDBStorageSize" },
                    "DSAuditDBClass" : { "Ref" : "DSAuditDBClass" },
                    "DSAutoScalingPolicyAverageCPUBusy" : { "Ref" : "DSAutoScalingPolicyAverageCPUBusy" },
                    "DSLoadBalancerHealthCheckTarget" : { "Ref" : "DSLoadBalancerHealthCheckTarget" },
                    "DSAdminEmail" : { "Ref" : "DSAdminEmail" },
                    "DSAdminPassword" : { "Ref" : "DSAdminPassword" },
                    "DSUserName" : { "Ref" : "DSUserName" },
                    "DSUserEmail" : { "Ref" : "DSUserEmail" },
                    "DSUserPassword" : { "Ref" : "DSUserPassword" },
                    "QSS3BucketName" : { "Ref" : "QSS3BucketName" },
                    "QSS3KeyPrefix" : { "Ref" : "QSS3KeyPrefix" }
                }
            }
        }
    },
    "Outputs" : {
        "LinuxBastionPublicIP" : {
            "Description" : "Linux Bastion Public IP",
            "Value" : { "Fn::GetAtt" : [ "dsDataSunriseCluster" , "Outputs.LinuxBastionPublicIP" ] }
        },
        "ClusterWebConsole" : {
            "Description" : "DataSunrise Web Console",
            "Value" : { "Fn::GetAtt" : [ "dsDataSunriseCluster" , "Outputs.ClusterWebConsole" ] }
        },
        "LinuxBastionSecurityGroup" : {
            "Description" : "Linux Bastion Security Group",
            "Value" : { "Fn::GetAtt" : [ "dsDataSunriseCluster" , "Outputs.LinuxBastionSecurityGroup" ] }
        },  
        "SecurityGroupPublicLoadBalancer" : {
            "Description" : "DataSunrise Security Group (Public Load Balancer)",
            "Value" : { "Fn::GetAtt" : [ "dsDataSunriseCluster" , "Outputs.SecurityGroupPublicLoadBalancer" ] }
        },
        "SecurityGroupPublicNetwork" : {
            "Description" : "DataSunrise Security Group (Public Network)",
            "Value" : { "Fn::GetAtt" : [ "dsDataSunriseCluster" , "Outputs.SecurityGroupPublicNetwork" ] }
        },
        "SecurityGroupPrivateNetwork" : {
            "Description" : "DataSunrise Security Group (Private Network)",
            "Value" : { "Fn::GetAtt" : [ "dsDataSunriseCluster" , "Outputs.SecurityGroupPrivateNetwork" ] }
        },
        "LicenseSecret" : {
            "Description" : "DataSunrise License (Secret)",
            "Value" : { "Fn::GetAtt" : [ "dsDataSunriseCluster" , "Outputs.LicenseSecret" ] }
        },
        "AuditDBSecret" : {
            "Description" : "DataSunrise Audit Database (Secret)",
            "Value" : { "Fn::GetAtt" : [ "dsDataSunriseCluster" , "Outputs.AuditDBSecret" ] }
        },
        "DictionaryDBSecret" : {
            "Description" : "DataSunrise Dictionary Database (Secret)",
            "Value" : { "Fn::GetAtt" : [ "dsDataSunriseCluster" , "Outputs.DictionaryDBSecret" ] }
        },
        "SecretAdminPassword" : {
            "Description" : "DataSunrise Admin Password (Secret)",
            "Value" : { "Fn::GetAtt" : [ "dsDataSunriseCluster" , "Outputs.SecretAdminPassword" ] }
        },
        "SecretUserPassword" : {
            "Description" : "DataSunrise User Password (Secret)",
            "Value" : { "Fn::GetAtt" : [ "dsDataSunriseCluster" , "Outputs.SecretUserPassword" ] }
        },        
        "RedShiftClusterEndpoitHostname" : {
            "Description" : "Redshift Cluster Endpoint",
            "Value" : { "Fn::GetAtt" : [ "dsDataSunriseCluster" , "Outputs.RedShiftClusterEndpoitHostname" ] }
        },
        "RedshiftClusterEndpointPort" : {
            "Description" : "Redshift Cluster Port",
            "Value" : { "Fn::GetAtt" : [ "dsDataSunriseCluster" , "Outputs.RedshiftClusterEndpointPort" ] }
        }
    }
}